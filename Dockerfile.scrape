############################################################
# Dockerfile to run a Django-based web application
# Based on an AMI
############################################################

# Set the base image to use to Ubuntu
FROM python:3.8

# Set the file maintainer (your name - the file's author)
MAINTAINER Michael Corey

# Set env variables used in this Dockerfile (add a unique prefix, such as DOCKYARD)
# Local directory with project source
ENV DOCKYARD_SRC=.

# Directory in container for all project files
ENV DOCKYARD_SRVHOME=/srv

# Directory in container for project source files
ENV DOCKYARD_SRVPROJ=$DOCKYARD_SRVHOME/$DOCKYARD_SRC

# Update the default application repository sources list
RUN apt-get update && apt-get -y upgrade
RUN apt-get install -y git

# Create application subdirectories
WORKDIR $DOCKYARD_SRVHOME
RUN mkdir media static logs exports exports/mn_covid_data


#read
VOLUME ["$DOCKYARD_SRVHOME/media/", "$DOCKYARD_SRVHOME/logs/"]

# Copy application source code to SRCDIR
COPY $DOCKYARD_SRC $DOCKYARD_SRVPROJ

# Install Python dependencies
RUN pip install pipenv
RUN pipenv lock --requirements > $DOCKYARD_SRVPROJ/requirements.txt
RUN pip install -r $DOCKYARD_SRVPROJ/requirements.txt
RUN pip install awscli

# Set up for github execution
# sudo chmod a+x /usr/local/bin/my_gitpython_ssh
RUN git config --global user.email "michael.corey@startribune.com"
RUN git config --global user.name "Scraper Bot"
RUN chmod 600 keys/.docker_deploy_rsa

# Authorize Github as SSH Host
RUN mkdir -p /root/.ssh && \
    chmod 0700 /root/.ssh && \
    ssh-keyscan github.com > /root/.ssh/known_hosts


# Copy entrypoint script into the image
WORKDIR $DOCKYARD_SRVPROJ
COPY ./docker-entrypoint-scrape.sh /
RUN chmod +x /docker-entrypoint-scrape.sh
RUN echo "I am built."
ENTRYPOINT ["/docker-entrypoint-scrape.sh"]
